var cut;
var sliderBtn;
var xys;
var startTime;
var bgWidth;
var capBg;
var bgImg;
var radioImg;
var radioBlock;
var radio;
var radioDpr;
var flag;
var type;
var percentX;
var nPercentX;
var maxN;
var maxNa;
var sortImgArr;

function reset() {
    if (cut) {
        cut.setStyle(({
            'left': '8px',
        }))
    };
    if (sliderBtn) {
        sliderBtn.setStyle(({
            'left': '0px',
        }))
    };
    if (capBg) {
        capBg.setStyle(({
            'width': '20px',
        }))
    };
    if (radioImg) {
        radioImg.setStyle(({
            'transform': 'rotate(0deg)',
        }));
        radioBlock.setStyle(({
            'transform': 'rotate(0deg)',
        }))
    }
};

function touchStart(e, ownerInstance) {
    var x = e.touches[(0)].pageX.toFixed(2);
    var y = e.touches[(0)].pageY.toFixed(2);
    startTime = getDate().valueOf();
    var str = y + ',' + x + ',' + startTime;
    xys = [str];
    cut = ownerInstance.selectComponent('.cap-cut');
    sliderBtn = ownerInstance.selectComponent('.cap-slider');
    capBg = ownerInstance.selectComponent('.cap-bg');
    bgImg = ownerInstance.selectComponent('.bgImg');
    radioImg = ownerInstance.selectComponent('.radioImg');
    radioBlock = ownerInstance.selectComponent('.radioBlock');
    sortImgArr = ownerInstance.selectAllComponents('.sortImg');
    var sliderBtnDataset = sliderBtn.getDataset();
    bgWidth = sliderBtnDataset.bgwidth;
    type = sliderBtnDataset.type;
    percentX = sliderBtnDataset.percentx;
    nPercentX = sliderBtnDataset.npercentx;
    maxN = sliderBtnDataset.maxn;
    maxNa = sliderBtnDataset.maxna;
    if (radioBlock) {
        radioDpr = radioBlock.getDataset().radio
    };
    ownerInstance.callMethod('changeType', ({
        sliderType: 'start',
    }));
    ownerInstance.callMethod('createData')
};
var preCurrentN = -1;
var preCurrentAn = -1;
var currentN = -1;
var currentAn = -1;

function touchMove(e, ownerInstance) {
    var x = parseFloat(e.touches[(0)].pageX.toFixed(2));
    var y = parseFloat(e.touches[(0)].pageY.toFixed(2));
    var startX = parseFloat(xys[(0)].split(',')[(1)]);
    var time = getDate().valueOf() - startTime;
    var str = y + ',' + x + ',' + time;
    xys.push(str);
    var X = x < startX ? 8 : x - startX < (bgWidth - 40) ? 8 + x - startX : bgWidth - 32;
    if (cut) {
        cut.setStyle(({
            'left': X + 'px',
        }))
    };
    radio = 180 * X / (bgWidth - 40);
    if (radioImg) {
        radioImg.setStyle(({
            'transform': 'rotate(' + radio + 'deg)',
        }));
        radioBlock.setStyle(({
            'transform': 'rotate(-' + radio / (radioDpr || 1) + 'deg)',
        }))
    };
    if (+type === 6) {
        currentN = Math.min(maxN, Math.floor(X / percentX));
        currentAn = Math.min(maxNa, Math.floor(X / nPercentX));
        if (preCurrentN !== currentN || preCurrentAn !== currentAn) {
            if (preCurrentN !== currentN) {
                for (var i = 0; i < sortImgArr.length; i++) {
                    sortImgArr[((nt_6 = (i), null == nt_6 ? undefined : 'number' === typeof nt_6 ? nt_6 : "" + nt_6))].addClass('fadeIn')
                };
                e.instance.setTimeout((function() {
                    for (var i = 0; i < sortImgArr.length; i++) {
                        sortImgArr[((nt_7 = (i), null == nt_7 ? undefined : 'number' === typeof nt_7 ? nt_7 : "" + nt_7))].removeClass('fadeIn')
                    }
                }), 300)
            };
            ownerInstance.callMethod('changeSlideTransformList', ({
                n: currentN,
                an: currentAn,
            }))
        };
        preCurrentN = currentN;
        preCurrentAn = currentAn
    };
    sliderBtn.setStyle(({
        'left': X - 8 + 'px',
    }));
    capBg.setStyle(({
        'width': X + 12 + 'px',
    }))
};

function touchEnd(e, ownerInstance) {
    var sliderType = sliderBtn.getDataset().slidertype;
    if (sliderType !== 'start' || flag) {
        return
    };
    flag = true;
    var x = parseFloat(e.changedTouches[(0)].pageX.toFixed(2));
    var postData = ({
        x: x - parseFloat(xys[(0)].split(',')[(1)]),
        radio: radio,
        pts: '0,0',
        xys: xys.join('|'),
    });
    ownerInstance.callMethod('sliderUpdate', postData);
    e.instance.setTimeout((function() {
        flag = false
    }), 800)
};
module.exports = ({
    touchMove: touchMove,
    touchEnd: touchEnd,
    touchStart: touchStart,
    reset: reset,
});